#!/bin/sh

exec 2>&1
install -d -m 1775 -o "$USER" -g "$GROUP" /run/postgresql
test -f /run/postgresql/postgres.run || exit $?
chpst -u "$USER":"$GROUP" pg_isready || exit $?
chpst -u "$USER":"$GROUP" pg_ctl status || exit $?
chmod 755 supervise
chown "$USER":"$GROUP" supervise/ok supervise/control supervise/status
realpath "$0"
set -ex
FORMATION="$(chpst -u "$USER":"$GROUP" pg_autoctl config get pg_autoctl.formation)"
GROUPID="$(chpst -u "$USER":"$GROUP" pg_autoctl config get pg_autoctl.group)"
NODEHOST="$(hostname)"
NODENAME="$(chpst -u "$USER":"$GROUP" pg_autoctl config get pg_autoctl.name)"
PID="$$"
PRIMARY="$(cat "$HOME/.primary")"
while true; do
    STATE="$(chpst -u "$USER":"$GROUP" pg_autoctl show state --group "$GROUPID" --formation "$FORMATION" --json | jq --unbuffered --raw-output ".[] | select(.nodename == \"$NODENAME\" and .nodehost == \"$NODEHOST\" and .current_group_state == .assigned_group_state) | .current_group_state")"
    case "$STATE" in
        "single" | "primary" | "wait_primary")
            TIME="$(ps -oetimes= -p "$PID")"
            if [ "$TIME" -gt "$PRIMARY" ]; then break; fi
            sleep 10
        ;;
        "secondary")
            chpst -u "$USER":"$GROUP" pg_autoctl perform switchover --group "$GROUPID" --formation "$FORMATION" || echo $?
            break
        ;;
        *)
            sleep 10
        ;;
    esac
done
exec rm -rf /etc/service/primary
